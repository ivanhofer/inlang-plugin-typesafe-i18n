var M=async e=>({baseLocale:"en",tempPath:"./node_modules/typesafe-i18n/temp-output/",outputPath:"./src/i18n/",outputFormat:"TypeScript",typesFileName:"i18n-types",utilFileName:"i18n-util",formattersTemplateFileName:"formatters",typesTemplateFileName:"custom-types",esmImports:!1,adapter:void 0,generateOnlyTypes:!1,banner:"/* eslint-disable */",runAfterGenerator:void 0,...e}),F=async e=>{let t=await e.readFile(".typesafe-i18n.json").catch(()=>"{}");return JSON.parse(t.toString())},u=async e=>{let t=await F(e);return M(t)};var f=async(e,t,r)=>{let a=await e.readFile(S(t,`${r}/index.ts`),{encoding:"utf-8"}).catch(()=>{});if(!a)return;let s=a.split(`
`).filter(l=>!l.trim().startsWith("import ")).join(`
`).replace(/const\s\w[^\s]+\s*(:\s*\w[^\s]+\s*)=/g,(l,c)=>l.replace(c,"")).replace(/ satisfies.*\/n/g,`
`);return(await import("data:application/javascript,"+encodeURIComponent(s))).default},g=e=>({...e,readdir:async(t,r)=>{let a=await e.readdir(t);return r?.withFileTypes?a.map(i=>({name:i,isDirectory:()=>!(i.endsWith(".ts")||i.endsWith(".js"))})):a},readFile:async t=>{let r=await e.readFile(t);return Buffer.from(r).toString()}}),S=(...e)=>e.map(t=>{for(;t.startsWith("/");)t=t.substring(1);for(;t.endsWith("/");)t=t.substring(0,t.length-1);return t}).join("/");var y=e=>e!==void 0,x=e=>typeof e=="string",j=e=>t=>t[e],$=e=>Array.from(new Set(e)),D=e=>Object.fromEntries(Object.entries(e).map(([t,r])=>t!=="i"&&r&&r!="0"&&[t,r]).filter(Boolean)),E=e=>Object.fromEntries(Object.keys(e).map(t=>{let r=e[t];return[t,Array.isArray(r)?r.map(a=>a?.trim()):r===!!r?r:r?.trim()]})),O=e=>{let[t="",...r]=e.split("|"),[a="",i]=t.split(":"),[n,s]=a.split("?");return{k:n,i,n:s==="",f:r}},C=e=>!!(e.o||e.r),z=(e,t)=>{let[r,a]=e.split(":");a||(a=r,r=t);let i=a.split("|"),[n,s,o,l,c,k]=i,p=i.filter(b=>b!==void 0).length;return p===1?{k:r,r:n}:p===2?{k:r,o:n,r:s}:p===3?{k:r,z:n,o:s,r:o}:{k:r,z:n,o:s,t:o,f:l,m:c,r:k}},A=/^\{.*\}$/,B=e=>Object.fromEntries(m(e).split(",").map(t=>t.split(":")).reduce((t,r)=>r.length===2?[...t,r.map(a=>a.trim())]:(t[t.length-1][1]+=","+r[0],t),[])),d=/(\{(?:[^{}]+|\{(?:[^{}]+)*\})*\})/g,m=e=>e.substring(1,e.length-1),I=(e,t=!0,r="",a="")=>e.split(d).map(i=>{if(!i.match(d))return i;let n=m(i);if(n.startsWith("{"))return z(m(n),a);let s=O(n);return a=s.k||a,!r&&(r=a),s}).map(i=>{if(typeof i=="string")return i;i.k||(i.k=r||"0");let n=E(i);return t?D(n):n});var N=e=>e.kind==="plural",W=e=>e.kind==="parameter",R=e=>e.kind==="switch-case",h=e=>U(I(e,!1).map(L).filter(y)),L=e=>x(e)?e?V(e):void 0:C(e)?_(e):G(e),V=e=>({kind:"text",content:e}),_=({k:e,z:t,o:r,t:a,f:i,m:n,r:s})=>({kind:"plural",key:e,...t?{zero:t}:void 0,...r?{one:r}:void 0,...a?{two:a}:void 0,...i?{few:i}:void 0,...n?{many:n}:void 0,other:s}),G=({k:e,i:t,n:r,f:a})=>({kind:"parameter",key:e,types:t?[t]:[],optional:r||!1,transforms:(a||[]).map(J)}),J=e=>e.match(A)?{kind:"switch-case",cases:Object.entries(B(e)).map(([r,a])=>({key:r,value:a})),raw:e}:{kind:"formatter",name:e},U=e=>{let t=e.filter(W),r=e.filter(N),a={};return t.forEach(({key:i,types:n,transforms:s,optional:o})=>{let l=n.length?n:X(s);a[i]={types:$([...a[i]?.types||[],...l]).filter(y),optional:a[i]?.optional||o}}),r.forEach(({key:i})=>{a[i]?.types.length||(a[i]={types:["string","number","boolean"],optional:!1})}),Object.keys(a).forEach(i=>{a[i]?.types.length||(a[i]={types:["unknown"],optional:a[i]?.optional||!1})}),Object.entries(a).forEach(([i,n])=>{let s=t.find(o=>o.key===i);s&&(s.types=n.types,s.optional=s.optional||n.optional)}),e},X=e=>{if(!e?.length)return[];let t=e[0];return R(t)?t.cases.map(j("key")).map(a=>a==="*"?"string":`'${a}'`):[]};var v=async({nodeishFs:e,languageTags:t})=>{let r=g(e),a=await u(r),i=(await Promise.all(t.map(async n=>{let s=await f(r,a.outputPath,n);if(s)return{languageTag:n,dictionary:s}}))).filter(Boolean);return q(i)},q=e=>{let t=[];for(let{languageTag:r,dictionary:a}of e){let i=H(a);for(let n of i){let s=t.find(({id:o})=>o===n.id);s||(s={id:n.id,selectors:[],body:{}},t.push(s)),s.body[r]=[{match:{},pattern:Q(n.value)}]}}return t},H=e=>Object.entries(e).map(([t,r])=>P(t,r)).flat(),P=(e,t)=>typeof t=="object"?Object.entries(t).map(([r,a])=>P(`${e}.${r}`,a)).flat():[{id:e,value:t}],Q=e=>h(e).map(r=>{switch(r.kind){case"parameter":return Y(r);case"text":return{type:"Text",value:r.content};case"plural":return Z(r)}}),Y=e=>({type:"VariableReference",name:e.key}),Z=e=>({type:"Text",value:`{{${[e.zero,e.one,e.two,e.few,e.many,e.other].filter(Boolean).join("|")}}}`});var w=async e=>{};var T={meta:{id:"ivanhofer.inlang-plugin-typesafe-i18n",displayName:{en:"typesafe-i18n plugin"},description:{en:"A plugin for inlang that uses typesafe-i18n to read and write messages"},keywords:["inlang","plugin","typesafe-i18n","TypeScript"]},loadMessages:v,saveMessages:w};var me={plugins:[T]};export{me as default};
//# sourceMappingURL=index.js.map
